package com.jansparta.n_plus_1_problem.api

import com.jansparta.n_plus_1_problem.api.dto.CommentResponse
import com.jansparta.n_plus_1_problem.api.dto.TodoResponse
import org.springframework.web.bind.annotation.GetMapping
import org.springframework.web.bind.annotation.RestController

@RestController
class TodoController(
    private val todoService: TodoService
) {
    // localhost:8080/api/v1/todos 로 swagger 없이 url로 확인 가능
    @GetMapping("/api/v1/todos")
    fun retrieveAllTodos(): List<TodoResponse> {
        return todoService.retrieveAllTodos()
    }
    // select t1_0.todo_id,t1_0.contents,t1_0.date,t1_0.is_complete
    // from todo t1_0

    // select c1_0.todo_id,c1_0.comment_id,c1_0.contents
    // from comment c1_0
    // where c1_0.todo_id in



    // JPQL 사용한 해결 방법
    @GetMapping("/api/v1/todosWithFetch")
    fun retrieveAllTodosWithFetch(): List<TodoResponse> {
        return todoService.retrieveAllTodosWithFetch()
    }
    // select t1_0.todo_id,c1_0.todo_id,c1_0.comment_id,c1_0.contents,t1_0.contents,t1_0.date,t1_0.is_complete
    // from todo t1_0
    // join comment c1_0 on t1_0.todo_id=c1_0.todo_id



    @GetMapping("/api/v1/todosWithEntityGraph")
    fun retrieveAllWithEntityGraph(): List<TodoResponse> {
        return todoService.retrieveAllWithEntityGraph()
    }
    // select t1_0.todo_id,c1_0.todo_id,c1_0.comment_id,c1_0.contents,t1_0.contents,t1_0.date,t1_0.is_complete
    // from todo t1_0
    // left join comment c1_0 on t1_0.todo_id=c1_0.todo_id
    // left outer join : 중복 데이터가 나올 수 있음. Set<> 혹은 distinct 키워드 통해 중복 제거 가능
    // 연관관계 복잡해질수록 @EntityGraph 복잡도 급증. Fetch Join 추천

    @GetMapping("/api/v1/comments")
    fun retrieveAllComments(): List<CommentResponse> {
        return todoService.retrieveAllComments()
    }
}